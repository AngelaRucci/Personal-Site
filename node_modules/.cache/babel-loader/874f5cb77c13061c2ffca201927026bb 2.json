{"ast":null,"code":"import _classCallCheck from \"/Users/angelarucci/Desktop/Projects/Personal-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/angelarucci/Desktop/Projects/Personal-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/angelarucci/Desktop/Projects/Personal-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/angelarucci/Desktop/Projects/Personal-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/angelarucci/Desktop/Projects/Personal-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/angelarucci/Desktop/Projects/Personal-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __publicField = function __publicField(obj, key, value) {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nimport { Color } from \"three\";\nimport { Pass } from \"./Pass.js\";\nvar RenderPass = /*#__PURE__*/function (_Pass) {\n  _inherits(RenderPass, _Pass);\n  function RenderPass(scene, camera, overrideMaterial, clearColor) {\n    var _this;\n    var clearAlpha = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n    _classCallCheck(this, RenderPass);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RenderPass).call(this));\n    __publicField(_assertThisInitialized(_assertThisInitialized(_this)), \"scene\");\n    __publicField(_assertThisInitialized(_assertThisInitialized(_this)), \"camera\");\n    __publicField(_assertThisInitialized(_assertThisInitialized(_this)), \"overrideMaterial\");\n    __publicField(_assertThisInitialized(_assertThisInitialized(_this)), \"clearColor\");\n    __publicField(_assertThisInitialized(_assertThisInitialized(_this)), \"clearAlpha\");\n    __publicField(_assertThisInitialized(_assertThisInitialized(_this)), \"clearDepth\", false);\n    __publicField(_assertThisInitialized(_assertThisInitialized(_this)), \"_oldClearColor\", new Color());\n    _this.scene = scene;\n    _this.camera = camera;\n    _this.overrideMaterial = overrideMaterial;\n    _this.clearColor = clearColor;\n    _this.clearAlpha = clearAlpha;\n    _this.clear = true;\n    _this.needsSwap = false;\n    return _this;\n  }\n  _createClass(RenderPass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer) {\n      var oldAutoClear = renderer.autoClear;\n      renderer.autoClear = false;\n      var oldClearAlpha;\n      var oldOverrideMaterial = null;\n      if (this.overrideMaterial !== void 0) {\n        oldOverrideMaterial = this.scene.overrideMaterial;\n        this.scene.overrideMaterial = this.overrideMaterial;\n      }\n      if (this.clearColor) {\n        renderer.getClearColor(this._oldClearColor);\n        oldClearAlpha = renderer.getClearAlpha();\n        renderer.setClearColor(this.clearColor, this.clearAlpha);\n      }\n      if (this.clearDepth) {\n        renderer.clearDepth();\n      }\n      renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n      if (this.clear) renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n      renderer.render(this.scene, this.camera);\n      if (this.clearColor) {\n        renderer.setClearColor(this._oldClearColor, oldClearAlpha);\n      }\n      if (this.overrideMaterial !== void 0) {\n        this.scene.overrideMaterial = oldOverrideMaterial;\n      }\n      renderer.autoClear = oldAutoClear;\n    }\n  }]);\n  return RenderPass;\n}(Pass);\nexport { RenderPass };","map":null,"metadata":{},"sourceType":"module"}