{"ast":null,"code":"import _objectWithoutProperties from \"/Users/angelarucci/Desktop/Projects/Personal-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nfunction create(type, effect) {\n  var El = type + 'Geometry';\n  return /*#__PURE__*/React.forwardRef(function (_ref, fref) {\n    var args = _ref.args,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"args\", \"children\"]);\n    var ref = React.useRef(null);\n    React.useImperativeHandle(fref, function () {\n      return ref.current;\n    });\n    React.useLayoutEffect(function () {\n      return void (effect == null ? void 0 : effect(ref.current));\n    });\n    return /*#__PURE__*/React.createElement(\"mesh\", _extends({\n      ref: ref\n    }, props), /*#__PURE__*/React.createElement(El, {\n      attach: \"geometry\",\n      args: args\n    }), children);\n  });\n}\nvar Box = create('box');\nvar Circle = create('circle');\nvar Cone = create('cone');\nvar Cylinder = create('cylinder');\nvar Sphere = create('sphere');\nvar Plane = create('plane');\nvar Tube = create('tube');\nvar Torus = create('torus');\nvar TorusKnot = create('torusKnot');\nvar Tetrahedron = create('tetrahedron');\nvar Ring = create('ring');\nvar Polyhedron = create('polyhedron');\nvar Icosahedron = create('icosahedron');\nvar Octahedron = create('octahedron');\nvar Dodecahedron = create('dodecahedron');\nvar Extrude = create('extrude');\nvar Lathe = create('lathe');\nvar Capsule = create('capsule');\nvar Shape = create('shape', function (_ref2) {\n  var geometry = _ref2.geometry;\n  // Calculate UVs (by https://discourse.threejs.org/u/prisoner849)\n  // https://discourse.threejs.org/t/custom-shape-in-image-not-working/49348/10\n  var pos = geometry.attributes.position;\n  var b3 = new THREE.Box3().setFromBufferAttribute(pos);\n  var b3size = new THREE.Vector3();\n  b3.getSize(b3size);\n  var uv = [];\n  var x = 0,\n    y = 0,\n    u = 0,\n    v = 0;\n  for (var i = 0; i < pos.count; i++) {\n    x = pos.getX(i);\n    y = pos.getY(i);\n    u = (x - b3.min.x) / b3size.x;\n    v = (y - b3.min.y) / b3size.y;\n    uv.push(u, v);\n  }\n  geometry.setAttribute('uv', new THREE.Float32BufferAttribute(uv, 2));\n});\nexport { Box, Capsule, Circle, Cone, Cylinder, Dodecahedron, Extrude, Icosahedron, Lathe, Octahedron, Plane, Polyhedron, Ring, Shape, Sphere, Tetrahedron, Torus, TorusKnot, Tube };","map":null,"metadata":{},"sourceType":"module"}