{"ast":null,"code":"import _classCallCheck from \"/Users/angelarucci/Desktop/Projects/Personal-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/angelarucci/Desktop/Projects/Personal-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/angelarucci/Desktop/Projects/Personal-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/angelarucci/Desktop/Projects/Personal-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/angelarucci/Desktop/Projects/Personal-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { Loader } from \"three\";\nimport { GLTFLoader } from \"./GLTFLoader.js\";\nvar VRMLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(VRMLoader, _Loader);\n  function VRMLoader(manager) {\n    var _this;\n    _classCallCheck(this, VRMLoader);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VRMLoader).call(this, manager));\n    _this.gltfLoader = new GLTFLoader(manager);\n    return _this;\n  }\n  _createClass(VRMLoader, [{\n    key: \"load\",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      this.gltfLoader.load(url, function (gltf) {\n        try {\n          scope.parse(gltf, onLoad);\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    }\n  }, {\n    key: \"setDRACOLoader\",\n    value: function setDRACOLoader(dracoLoader) {\n      this.gltfLoader.setDRACOLoader(dracoLoader);\n      return this;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(gltf, onLoad) {\n      onLoad(gltf);\n    }\n  }]);\n  return VRMLoader;\n}(Loader);\nexport { VRMLoader };","map":null,"metadata":{},"sourceType":"module"}