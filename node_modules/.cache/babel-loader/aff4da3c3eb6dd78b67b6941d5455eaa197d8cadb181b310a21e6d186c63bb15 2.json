{"ast":null,"code":"var _jsxFileName = \"/Users/angelarucci/Desktop/Projects/Personal-Site/src/Shader/ShaderObject.jsx\",\n  _s = $RefreshSig$();\nimport { OrbitControls } from \"@react-three/drei\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { useMemo, useRef } from \"react\";\nimport { Color } from \"three\";\nimport vertexShader from './VertexShader';\nimport fragmentShader from './FragmentShader';\n\n// colors it\n// const fragmentShader = `...`;\n// makes it move\n// const vertexShader = `...`;\n\n// console.log([\"red\", \"pink\", \"blue\"].map(c => new Color(c)));\n\n// const MovingPlane = () => {\n//   // This reference will give us direct access to the mesh\n//   const mesh = useRef();\n\n//   const uniforms = useMemo(\n//     () => ({\n//       u_time: {\n//         value: 0.0,\n//       },\n//     }), []\n//   );\n\n//   useFrame((state) => {\n//     const { clock } = state;\n//     mesh.current.material.uniforms.u_time.value = clock.getElapsedTime();\n//   });\n\n//   return (\n//     <mesh ref={mesh} position={[0, 0, 0]}  rotation={[-Math.PI / 2, 0, 0]} scale={1.5}>\n//       <planeGeometry args={[1, 1, 32, 32]} />\n//       <shaderMaterial\n//         fragmentShader={fragmentShader}\n//         vertexShader={vertexShader}\n//         uniforms={uniforms}\n//         wireframe\n//       />\n//     </mesh>\n//   );\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fragment = () => {\n  _s();\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n  const uniforms = useMemo(() => ({\n    u_time: {\n      value: 0.0\n    },\n    u_a_color: {\n      value: new Color(\"#D92E2E\")\n    },\n    u_b_color: {\n      value: new Color(\"#2EBAD9\")\n    },\n    u_c_color: {\n      value: new Color(\"#D9C82E\")\n    }\n  }), []);\n  useFrame(state => {\n    const {\n      clock\n    } = state;\n    mesh.current.material.uniforms.u_time.value = clock.getElapsedTime();\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: mesh,\n    position: [0, 0, 30],\n    scale: 1.0,\n    children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n      args: [1, 1, 32, 32]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"shaderMaterial\", {\n      vertexColors: true,\n      fragmentShader: fragmentShader,\n      vertexShader: vertexShader,\n      uniforms: uniforms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Fragment, \"dsGwMnvRu6iKUbHdP9YwtSu1ANc=\", false, function () {\n  return [useFrame];\n});\n_c = Fragment;\nconst Background = () => {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [0.0, 0.0, 1.0]\n    },\n    children: [/*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Background;\nexport default Background;\nvar _c, _c2;\n$RefreshReg$(_c, \"Fragment\");\n$RefreshReg$(_c2, \"Background\");","map":{"version":3,"names":["OrbitControls","Canvas","useFrame","useMemo","useRef","Color","vertexShader","fragmentShader","jsxDEV","_jsxDEV","Fragment","_s","mesh","uniforms","u_time","value","u_a_color","u_b_color","u_c_color","state","clock","current","material","getElapsedTime","ref","position","scale","children","args","fileName","_jsxFileName","lineNumber","columnNumber","vertexColors","_c","Background","camera","_c2","$RefreshReg$"],"sources":["/Users/angelarucci/Desktop/Projects/Personal-Site/src/Shader/ShaderObject.jsx"],"sourcesContent":["import { OrbitControls } from \"@react-three/drei\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { useMemo, useRef } from \"react\";\nimport { Color } from \"three\";\n\nimport vertexShader from './VertexShader';\nimport fragmentShader from './FragmentShader';\n\n// colors it\n// const fragmentShader = `...`;\n// makes it move\n// const vertexShader = `...`;\n\n// console.log([\"red\", \"pink\", \"blue\"].map(c => new Color(c)));\n\n// const MovingPlane = () => {\n//   // This reference will give us direct access to the mesh\n//   const mesh = useRef();\n\n//   const uniforms = useMemo(\n//     () => ({\n//       u_time: {\n//         value: 0.0,\n//       },\n//     }), []\n//   );\n\n//   useFrame((state) => {\n//     const { clock } = state;\n//     mesh.current.material.uniforms.u_time.value = clock.getElapsedTime();\n//   });\n\n//   return (\n//     <mesh ref={mesh} position={[0, 0, 0]}  rotation={[-Math.PI / 2, 0, 0]} scale={1.5}>\n//       <planeGeometry args={[1, 1, 32, 32]} />\n//       <shaderMaterial\n//         fragmentShader={fragmentShader}\n//         vertexShader={vertexShader}\n//         uniforms={uniforms}\n//         wireframe\n//       />\n//     </mesh>\n//   );\n// };\n\n\nconst Fragment = () => {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n\n  const uniforms = useMemo(\n    () => ({\n      u_time: {\n        value: 0.0,\n      },\n      u_a_color: {\n        value: new Color(\"#D92E2E\")\n      },\n      u_b_color: {\n        value: new Color(\"#2EBAD9\")\n      },\n      u_c_color: {\n        value: new Color(\"#D9C82E\")\n      },\n    }), []\n  );\n\n  useFrame((state) => {\n    const { clock } = state;\n    mesh.current.material.uniforms.u_time.value = clock.getElapsedTime();\n  });\n\n  return (\n    <mesh ref={mesh} position={[0, 0, 30]} scale={1.0}>\n      <planeGeometry args={[1, 1, 32, 32]} />\n      <shaderMaterial vertexColors={true} \n        fragmentShader={fragmentShader}\n        vertexShader={vertexShader}\n        uniforms={uniforms}\n      />\n    </mesh>\n  );\n};\n\nconst Background = () => {\n  return (\n    <Canvas camera={{ position: [0.0, 0.0, 1.0] }}>\n      <Fragment />\n      <OrbitControls />\n    </Canvas>\n  );\n};\n\n\nexport default Background"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}