{"ast":null,"code":"var _jsxFileName = \"/Users/angelarucci/Desktop/Projects/Personal-Site/src/Shader/ShaderObject.jsx\",\n  _s = $RefreshSig$();\nimport { OrbitControls, useAspect } from \"@react-three/drei\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { useMemo, useRef, useCallback, useEffect } from \"react\";\nimport { Color, Vector2 } from \"three\";\nimport { useThree } from '@react-three/fiber';\nimport vertexShader from './VertexShader';\nimport fragmentShader from './FragmentShader';\n\n// colors it\n// const fragmentShader = `...`;\n// makes it move\n// const vertexShader = `...`;\n\n// console.log([\"red\", \"pink\", \"blue\"].map(c => new Color(c)));\n\n// const MovingPlane = () => {\n//   // This reference will give us direct access to the mesh\n//   const mesh = useRef();\n\n//   const uniforms = useMemo(\n//     () => ({\n//       u_time: {\n//         value: 0.0,\n//       },\n//     }), []\n//   );\n\n//   useFrame((state) => {\n//     const { clock } = state;\n//     mesh.current.material.uniforms.u_time.value = clock.getElapsedTime();\n//   });\n\n//   return (\n//     <mesh ref={mesh} position={[0, 0, 0]}  rotation={[-Math.PI / 2, 0, 0]} scale={1.5}>\n//       <planeGeometry args={[1, 1, 32, 32]} />\n//       <shaderMaterial\n//         fragmentShader={fragmentShader}\n//         vertexShader={vertexShader}\n//         uniforms={uniforms}\n//         wireframe\n//       />\n//     </mesh>\n//   );\n// };\n\n// const Gradient = () => {\n//   // This reference will give us direct access to the mesh\n// const mesh = useRef();\n// const mousePosition = useRef({ x: 0, y: 0 });\n\n// const updateMousePosition = useCallback((e) => {\n//   mousePosition.current = { x: e.pageX, y: e.pageY };\n// }, []);\n\n// const uniforms = useMemo(\n//   () => ({\n//     u_time: {\n//       value: 0.0,\n//     },\n//     u_mouse: { value: new Vector2(0, 0) },\n//     u_bg: {\n//       value: new Color(\"#A1A3F7\"),\n//     },\n//     u_colorA: { value: new Color(\"#9FBAF9\") },\n//     u_colorB: { value: new Color(\"#FEB3D9\") },\n//   }),\n//   []\n// );\n\n// useEffect(() => {\n//   window.addEventListener(\"mousemove\", updateMousePosition, false);\n\n//   return () => {\n//     window.removeEventListener(\"mousemove\", updateMousePosition, false);\n//   };\n// }, [updateMousePosition]);\n\n// useFrame((state) => {\n//   const { clock } = state;\n\n//   mesh.current.material.uniforms.u_time.value = clock.getElapsedTime();\n//   mesh.current.material.uniforms.u_mouse.value = new Vector2(\n//     mousePosition.current.x,\n//     mousePosition.current.y\n//   );\n// });\n\n// return (\n//   <mesh ref={mesh} position={[0, 0, 0]} scale={1.5}>\n//     <planeGeometry args={[1, 1, 32, 32]} />\n//     <shaderMaterial\n//       fragmentShader={fragmentShader}\n//       vertexShader={vertexShader}\n//       uniforms={uniforms}\n//       wireframe={false}\n//     />\n//   </mesh>\n// );\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fragment = () => {\n  _s();\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n  const mousePosition = useRef({\n    x: 0,\n    y: 0\n  });\n  const viewport = useThree(state => state.viewport);\n  const updateMousePosition = useCallback(e => {\n    mousePosition.current = {\n      x: e.pageX,\n      y: e.pageY\n    };\n  }, []);\n  const uniforms = useMemo(() => ({\n    u_time: {\n      value: 0.0\n    },\n    u_mouse: {\n      value: new Vector2(0, 0)\n    },\n    u_colors: {\n      value: [new Color(\"#D92E2E\"), new Color('#2EBAD9'), new Color('#D9C82E'), new Color('#D98A2E')]\n    }\n  }), []);\n  useFrame(state => {\n    const {\n      clock\n    } = state;\n    mesh.current.material.uniforms.u_time.value = clock.getElapsedTime();\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: mesh,\n    position: [0, 0, 0],\n    scale: 10.5,\n    children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n      args: [5, 5, 20, 20]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"shaderMaterial\", {\n      fragmentShader: fragmentShader,\n      vertexShader: vertexShader,\n      uniforms: uniforms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(Fragment, \"+KKCa1StXLx+z1P8sqLKhM6NPiA=\", false, function () {\n  return [useThree, useFrame];\n});\n_c = Fragment;\nconst Background = () => {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [0.0, 0.0, 8.5]\n    },\n    children: /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Background;\nexport default Background;\nvar _c, _c2;\n$RefreshReg$(_c, \"Fragment\");\n$RefreshReg$(_c2, \"Background\");","map":{"version":3,"names":["OrbitControls","useAspect","Canvas","useFrame","useMemo","useRef","useCallback","useEffect","Color","Vector2","useThree","vertexShader","fragmentShader","jsxDEV","_jsxDEV","Fragment","_s","mesh","mousePosition","x","y","viewport","state","updateMousePosition","e","current","pageX","pageY","uniforms","u_time","value","u_mouse","u_colors","clock","material","getElapsedTime","ref","position","scale","children","args","fileName","_jsxFileName","lineNumber","columnNumber","_c","Background","camera","_c2","$RefreshReg$"],"sources":["/Users/angelarucci/Desktop/Projects/Personal-Site/src/Shader/ShaderObject.jsx"],"sourcesContent":["import { OrbitControls, useAspect } from \"@react-three/drei\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { useMemo, useRef, useCallback, useEffect } from \"react\";\nimport { Color, Vector2 } from \"three\";\nimport { useThree } from '@react-three/fiber'\n\nimport vertexShader from './VertexShader';\nimport fragmentShader from './FragmentShader';\n\n// colors it\n// const fragmentShader = `...`;\n// makes it move\n// const vertexShader = `...`;\n\n// console.log([\"red\", \"pink\", \"blue\"].map(c => new Color(c)));\n\n\n\n\n// const MovingPlane = () => {\n//   // This reference will give us direct access to the mesh\n//   const mesh = useRef();\n\n//   const uniforms = useMemo(\n//     () => ({\n//       u_time: {\n//         value: 0.0,\n//       },\n//     }), []\n//   );\n\n//   useFrame((state) => {\n//     const { clock } = state;\n//     mesh.current.material.uniforms.u_time.value = clock.getElapsedTime();\n//   });\n\n//   return (\n//     <mesh ref={mesh} position={[0, 0, 0]}  rotation={[-Math.PI / 2, 0, 0]} scale={1.5}>\n//       <planeGeometry args={[1, 1, 32, 32]} />\n//       <shaderMaterial\n//         fragmentShader={fragmentShader}\n//         vertexShader={vertexShader}\n//         uniforms={uniforms}\n//         wireframe\n//       />\n//     </mesh>\n//   );\n// };\n\n\n// const Gradient = () => {\n//   // This reference will give us direct access to the mesh\n// const mesh = useRef();\n// const mousePosition = useRef({ x: 0, y: 0 });\n\n// const updateMousePosition = useCallback((e) => {\n//   mousePosition.current = { x: e.pageX, y: e.pageY };\n// }, []);\n\n// const uniforms = useMemo(\n//   () => ({\n//     u_time: {\n//       value: 0.0,\n//     },\n//     u_mouse: { value: new Vector2(0, 0) },\n//     u_bg: {\n//       value: new Color(\"#A1A3F7\"),\n//     },\n//     u_colorA: { value: new Color(\"#9FBAF9\") },\n//     u_colorB: { value: new Color(\"#FEB3D9\") },\n//   }),\n//   []\n// );\n\n// useEffect(() => {\n//   window.addEventListener(\"mousemove\", updateMousePosition, false);\n\n//   return () => {\n//     window.removeEventListener(\"mousemove\", updateMousePosition, false);\n//   };\n// }, [updateMousePosition]);\n\n// useFrame((state) => {\n//   const { clock } = state;\n\n//   mesh.current.material.uniforms.u_time.value = clock.getElapsedTime();\n//   mesh.current.material.uniforms.u_mouse.value = new Vector2(\n//     mousePosition.current.x,\n//     mousePosition.current.y\n//   );\n// });\n\n// return (\n//   <mesh ref={mesh} position={[0, 0, 0]} scale={1.5}>\n//     <planeGeometry args={[1, 1, 32, 32]} />\n//     <shaderMaterial\n//       fragmentShader={fragmentShader}\n//       vertexShader={vertexShader}\n//       uniforms={uniforms}\n//       wireframe={false}\n//     />\n//   </mesh>\n// );\n// };\n\n\nconst Fragment = () => {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n\n  const mousePosition = useRef({ x: 0, y: 0 });\n\n  const viewport = useThree(state => state.viewport)\n\n  const updateMousePosition = useCallback((e) => {\n    mousePosition.current = { x: e.pageX, y: e.pageY };\n  }, []);\n\n  const uniforms = useMemo(\n    () => ({\n      u_time: {\n        value: 0.0,\n      },\n      u_mouse: { value: new Vector2(0, 0) },\n      u_colors: {\n        value: [ \n          new Color(\"#D92E2E\"),\n          new Color('#2EBAD9'),\n          new Color('#D9C82E'),\n          new Color('#D98A2E')\n        ]\n      }\n    }), []\n  );\n\n  useFrame((state) => {\n    const { clock } = state;\n    mesh.current.material.uniforms.u_time.value = clock.getElapsedTime();\n  });\n\n  return (\n    <mesh ref={mesh} position={[0, 0, 0]} scale={10.5}>\n      <planeGeometry args={[5, 5, 20, 20]} />\n      <shaderMaterial \n        fragmentShader={fragmentShader}\n        vertexShader={vertexShader}\n        uniforms={uniforms}\n      />\n    </mesh>\n  );\n};\n\nconst Background = () => {\n  return (\n    <Canvas camera={{ position: [0.0, 0.0, 8.5] }}>\n      <Fragment />\n    </Canvas>\n  );\n};\n\n\nexport default Background"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}