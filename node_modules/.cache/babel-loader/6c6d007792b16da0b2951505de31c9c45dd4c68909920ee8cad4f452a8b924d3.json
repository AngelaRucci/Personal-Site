{"ast":null,"code":"var _jsxFileName = \"/Users/angelarucci/Desktop/Projects/Personal-Site/src/Shader/ShaderObject.jsx\",\n  _s = $RefreshSig$();\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { useMemo, useRef, useCallback, useEffect } from \"react\";\nimport { Color, Vector2 } from \"three\";\nimport { useThree } from '@react-three/fiber';\nimport vertexShader from './VertexShader';\nimport fragmentShader from './FragmentShader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Fragment = () => {\n  _s();\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n  const uniforms = useMemo(() => ({\n    u_time: {\n      value: 0.0\n    },\n    u_mouse: {\n      value: new Vector2(0, 0)\n    },\n    u_colors: {\n      value: [new Color(\"#D92E2E\"), new Color('#2EBAD9'), new Color('#D9C82E'), new Color('#D98A2E')]\n    }\n  }), []);\n  useFrame(state => {\n    const {\n      clock\n    } = state;\n    mesh.current.material.uniforms.u_time.value = clock.getElapsedTime();\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: mesh,\n    position: [0, 0, 0],\n    scale: 10.5,\n    children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n      args: [5, 5, 20, 20]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"shaderMaterial\", {\n      fragmentShader: fragmentShader,\n      vertexShader: vertexShader,\n      uniforms: uniforms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Fragment, \"dsGwMnvRu6iKUbHdP9YwtSu1ANc=\", false, function () {\n  return [useFrame];\n});\n_c = Fragment;\nconst Background = () => {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [0.0, 0.0, 0.5]\n    },\n    children: /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Background;\nexport default Background;\nvar _c, _c2;\n$RefreshReg$(_c, \"Fragment\");\n$RefreshReg$(_c2, \"Background\");","map":{"version":3,"names":["Canvas","useFrame","useMemo","useRef","useCallback","useEffect","Color","Vector2","useThree","vertexShader","fragmentShader","jsxDEV","_jsxDEV","Fragment","_s","mesh","uniforms","u_time","value","u_mouse","u_colors","state","clock","current","material","getElapsedTime","ref","position","scale","children","args","fileName","_jsxFileName","lineNumber","columnNumber","_c","Background","camera","_c2","$RefreshReg$"],"sources":["/Users/angelarucci/Desktop/Projects/Personal-Site/src/Shader/ShaderObject.jsx"],"sourcesContent":["import { Canvas, useFrame } from \"@react-three/fiber\";\nimport { useMemo, useRef, useCallback, useEffect } from \"react\";\nimport { Color, Vector2 } from \"three\";\nimport { useThree } from '@react-three/fiber'\n\nimport vertexShader from './VertexShader';\nimport fragmentShader from './FragmentShader';\n\n\n\nconst Fragment = () => {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n\n  const uniforms = useMemo(\n    () => ({\n      u_time: {\n        value: 0.0,\n      },\n      u_mouse: { value: new Vector2(0, 0) },\n      u_colors: {\n        value: [ \n          new Color(\"#D92E2E\"),\n          new Color('#2EBAD9'),\n          new Color('#D9C82E'),\n          new Color('#D98A2E')\n        ]\n      }\n    }), []\n  );\n\n  useFrame((state) => {\n    const { clock } = state;\n    mesh.current.material.uniforms.u_time.value = clock.getElapsedTime();\n  });\n\n  return (\n    <mesh ref={mesh} position={[0, 0, 0]} scale={10.5}>\n      <planeGeometry args={[5, 5, 20, 20]} />\n      <shaderMaterial \n        fragmentShader={fragmentShader}\n        vertexShader={vertexShader}\n        uniforms={uniforms}\n      />\n    </mesh>\n  );\n};\n\nconst Background = () => {\n  return (\n    <Canvas camera={{ position: [0.0, 0.0, 0.5] }}>\n      <Fragment />\n    </Canvas>\n  );\n};\n\n\nexport default Background"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,oBAAoB;AACrD,SAASC,OAAO,EAAEC,MAAM,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAC/D,SAASC,KAAK,EAAEC,OAAO,QAAQ,OAAO;AACtC,SAASC,QAAQ,QAAQ,oBAAoB;AAE7C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI9C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB;EACA,MAAMC,IAAI,GAAGZ,MAAM,CAAC,CAAC;EAErB,MAAMa,QAAQ,GAAGd,OAAO,CACtB,OAAO;IACLe,MAAM,EAAE;MACNC,KAAK,EAAE;IACT,CAAC;IACDC,OAAO,EAAE;MAAED,KAAK,EAAE,IAAIX,OAAO,CAAC,CAAC,EAAE,CAAC;IAAE,CAAC;IACrCa,QAAQ,EAAE;MACRF,KAAK,EAAE,CACL,IAAIZ,KAAK,CAAC,SAAS,CAAC,EACpB,IAAIA,KAAK,CAAC,SAAS,CAAC,EACpB,IAAIA,KAAK,CAAC,SAAS,CAAC,EACpB,IAAIA,KAAK,CAAC,SAAS,CAAC;IAExB;EACF,CAAC,CAAC,EAAE,EACN,CAAC;EAEDL,QAAQ,CAAEoB,KAAK,IAAK;IAClB,MAAM;MAAEC;IAAM,CAAC,GAAGD,KAAK;IACvBN,IAAI,CAACQ,OAAO,CAACC,QAAQ,CAACR,QAAQ,CAACC,MAAM,CAACC,KAAK,GAAGI,KAAK,CAACG,cAAc,CAAC,CAAC;EACtE,CAAC,CAAC;EAEF,oBACEb,OAAA;IAAMc,GAAG,EAAEX,IAAK;IAACY,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;IAACC,KAAK,EAAE,IAAK;IAAAC,QAAA,gBAChDjB,OAAA;MAAekB,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvCtB,OAAA;MACEF,cAAc,EAAEA,cAAe;MAC/BD,YAAY,EAAEA,YAAa;MAC3BO,QAAQ,EAAEA;IAAS;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAACpB,EAAA,CApCID,QAAQ;EAAA,QAqBZZ,QAAQ;AAAA;AAAAkC,EAAA,GArBJtB,QAAQ;AAsCd,MAAMuB,UAAU,GAAGA,CAAA,KAAM;EACvB,oBACExB,OAAA,CAACZ,MAAM;IAACqC,MAAM,EAAE;MAAEV,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG;IAAE,CAAE;IAAAE,QAAA,eAC5CjB,OAAA,CAACC,QAAQ;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEb,CAAC;AAACI,GAAA,GANIF,UAAU;AAShB,eAAeA,UAAU;AAAA,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}