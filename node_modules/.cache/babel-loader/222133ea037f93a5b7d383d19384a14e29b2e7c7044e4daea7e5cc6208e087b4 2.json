{"ast":null,"code":"var _jsxFileName = \"/Users/angelarucci/Desktop/Projects/Personal-Site/src/Shader/ShaderObject.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { OrbitControls } from \"@react-three/drei\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { useMemo, useRef, useCallback, useEffect } from \"react\";\nimport { Color, Vector2 } from \"three\";\nimport vertexShader from './VertexShader';\nimport fragmentShader from './FragmentShader';\n\n// colors it\n// const fragmentShader = `...`;\n// makes it move\n// const vertexShader = `...`;\n\n// console.log([\"red\", \"pink\", \"blue\"].map(c => new Color(c)));\n\n// const MovingPlane = () => {\n//   // This reference will give us direct access to the mesh\n//   const mesh = useRef();\n\n//   const uniforms = useMemo(\n//     () => ({\n//       u_time: {\n//         value: 0.0,\n//       },\n//     }), []\n//   );\n\n//   useFrame((state) => {\n//     const { clock } = state;\n//     mesh.current.material.uniforms.u_time.value = clock.getElapsedTime();\n//   });\n\n//   return (\n//     <mesh ref={mesh} position={[0, 0, 0]}  rotation={[-Math.PI / 2, 0, 0]} scale={1.5}>\n//       <planeGeometry args={[1, 1, 32, 32]} />\n//       <shaderMaterial\n//         fragmentShader={fragmentShader}\n//         vertexShader={vertexShader}\n//         uniforms={uniforms}\n//         wireframe\n//       />\n//     </mesh>\n//   );\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gradient = () => {\n  _s();\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n  const mousePosition = useRef({\n    x: 0,\n    y: 0\n  });\n  const updateMousePosition = useCallback(e => {\n    mousePosition.current = {\n      x: e.pageX,\n      y: e.pageY\n    };\n  }, []);\n  const uniforms = useMemo(() => ({\n    u_time: {\n      value: 0.0\n    },\n    u_mouse: {\n      value: new Vector2(0, 0)\n    },\n    u_bg: {\n      value: new Color(\"#A1A3F7\")\n    },\n    u_colorA: {\n      value: new Color(\"#9FBAF9\")\n    },\n    u_colorB: {\n      value: new Color(\"#FEB3D9\")\n    }\n  }), []);\n  useEffect(() => {\n    window.addEventListener(\"mousemove\", updateMousePosition, false);\n    return () => {\n      window.removeEventListener(\"mousemove\", updateMousePosition, false);\n    };\n  }, [updateMousePosition]);\n  useFrame(state => {\n    const {\n      clock\n    } = state;\n    mesh.current.material.uniforms.u_time.value = clock.getElapsedTime();\n    mesh.current.material.uniforms.u_mouse.value = new Vector2(mousePosition.current.x, mousePosition.current.y);\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: mesh,\n    position: [0, 0, 0],\n    scale: 1.5,\n    children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n      args: [1, 1, 32, 32]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"shaderMaterial\", {\n      fragmentShader: fragmentShader,\n      vertexShader: vertexShader,\n      uniforms: uniforms,\n      wireframe: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 3\n  }, this);\n};\n_s(Gradient, \"THo+J8bxmWnyARasFHGuyL0jwxE=\", false, function () {\n  return [useFrame];\n});\n_c = Gradient;\nconst Fragment = () => {\n  _s2();\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n  const mousePosition = useRef({\n    x: 0,\n    y: 0\n  });\n  const updateMousePosition = useCallback(e => {\n    mousePosition.current = {\n      x: e.pageX,\n      y: e.pageY\n    };\n  }, []);\n  const uniforms = useMemo(() => ({\n    u_time: {\n      value: 0.0\n    },\n    u_mouse: {\n      value: new Vector2(0, 0)\n    },\n    u_bg: {\n      value: new Color(\"#D9C82E\")\n    },\n    u_colorA: {\n      value: new Color(\"#D92E2E\")\n    },\n    u_colorB: {\n      value: new Color(\"#2EBAD9\")\n    }\n  }), []);\n  useEffect(() => {\n    window.addEventListener(\"mousemove\", updateMousePosition, false);\n    return () => {\n      window.removeEventListener(\"mousemove\", updateMousePosition, false);\n    };\n  }, [updateMousePosition]);\n  useFrame(state => {\n    const {\n      clock\n    } = state;\n    mesh.current.material.uniforms.u_time.value = clock.getElapsedTime();\n    mesh.current.material.uniforms.u_mouse.value = new Vector2(mousePosition.current.x, mousePosition.current.y);\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: mesh,\n    position: [0, 0, 0],\n    rotation: [-Math.PI / 2, 0, 0],\n    scale: 1.5,\n    children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n      args: [1, 1, 32, 32]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"shaderMaterial\", {\n      vertexColors: true,\n      fragmentShader: fragmentShader,\n      vertexShader: vertexShader,\n      uniforms: uniforms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s2(Fragment, \"THo+J8bxmWnyARasFHGuyL0jwxE=\", false, function () {\n  return [useFrame];\n});\n_c2 = Fragment;\nconst Background = () => {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [0.0, 0.0, 1.5]\n    },\n    children: [/*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Background;\nexport default Background;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Gradient\");\n$RefreshReg$(_c2, \"Fragment\");\n$RefreshReg$(_c3, \"Background\");","map":{"version":3,"names":["OrbitControls","Canvas","useFrame","useMemo","useRef","useCallback","useEffect","Color","Vector2","vertexShader","fragmentShader","jsxDEV","_jsxDEV","Gradient","_s","mesh","mousePosition","x","y","updateMousePosition","e","current","pageX","pageY","uniforms","u_time","value","u_mouse","u_bg","u_colorA","u_colorB","window","addEventListener","removeEventListener","state","clock","material","getElapsedTime","ref","position","scale","children","args","fileName","_jsxFileName","lineNumber","columnNumber","wireframe","_c","Fragment","_s2","rotation","Math","PI","vertexColors","_c2","Background","camera","_c3","$RefreshReg$"],"sources":["/Users/angelarucci/Desktop/Projects/Personal-Site/src/Shader/ShaderObject.jsx"],"sourcesContent":["import { OrbitControls } from \"@react-three/drei\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { useMemo, useRef, useCallback, useEffect } from \"react\";\nimport { Color, Vector2 } from \"three\";\n\nimport vertexShader from './VertexShader';\nimport fragmentShader from './FragmentShader';\n\n// colors it\n// const fragmentShader = `...`;\n// makes it move\n// const vertexShader = `...`;\n\n// console.log([\"red\", \"pink\", \"blue\"].map(c => new Color(c)));\n\n\n\n\n// const MovingPlane = () => {\n//   // This reference will give us direct access to the mesh\n//   const mesh = useRef();\n\n//   const uniforms = useMemo(\n//     () => ({\n//       u_time: {\n//         value: 0.0,\n//       },\n//     }), []\n//   );\n\n//   useFrame((state) => {\n//     const { clock } = state;\n//     mesh.current.material.uniforms.u_time.value = clock.getElapsedTime();\n//   });\n\n//   return (\n//     <mesh ref={mesh} position={[0, 0, 0]}  rotation={[-Math.PI / 2, 0, 0]} scale={1.5}>\n//       <planeGeometry args={[1, 1, 32, 32]} />\n//       <shaderMaterial\n//         fragmentShader={fragmentShader}\n//         vertexShader={vertexShader}\n//         uniforms={uniforms}\n//         wireframe\n//       />\n//     </mesh>\n//   );\n// };\n\n\nconst Gradient = () => {\n  // This reference will give us direct access to the mesh\nconst mesh = useRef();\nconst mousePosition = useRef({ x: 0, y: 0 });\n\nconst updateMousePosition = useCallback((e) => {\n  mousePosition.current = { x: e.pageX, y: e.pageY };\n}, []);\n\nconst uniforms = useMemo(\n  () => ({\n    u_time: {\n      value: 0.0,\n    },\n    u_mouse: { value: new Vector2(0, 0) },\n    u_bg: {\n      value: new Color(\"#A1A3F7\"),\n    },\n    u_colorA: { value: new Color(\"#9FBAF9\") },\n    u_colorB: { value: new Color(\"#FEB3D9\") },\n  }),\n  []\n);\n\nuseEffect(() => {\n  window.addEventListener(\"mousemove\", updateMousePosition, false);\n\n  return () => {\n    window.removeEventListener(\"mousemove\", updateMousePosition, false);\n  };\n}, [updateMousePosition]);\n\nuseFrame((state) => {\n  const { clock } = state;\n\n  mesh.current.material.uniforms.u_time.value = clock.getElapsedTime();\n  mesh.current.material.uniforms.u_mouse.value = new Vector2(\n    mousePosition.current.x,\n    mousePosition.current.y\n  );\n});\n\nreturn (\n  <mesh ref={mesh} position={[0, 0, 0]} scale={1.5}>\n    <planeGeometry args={[1, 1, 32, 32]} />\n    <shaderMaterial\n      fragmentShader={fragmentShader}\n      vertexShader={vertexShader}\n      uniforms={uniforms}\n      wireframe={false}\n    />\n  </mesh>\n);\n};\n\n\nconst Fragment = () => {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n\n  const mousePosition = useRef({ x: 0, y: 0 });\n\n  const updateMousePosition = useCallback((e) => {\n    mousePosition.current = { x: e.pageX, y: e.pageY };\n  }, []);\n\n  const uniforms = useMemo(\n    () => ({\n      u_time: {\n        value: 0.0,\n      },\n      u_mouse: { value: new Vector2(0, 0) },\n      u_bg: {\n        value: new Color(\"#D9C82E\"),\n      },\n      u_colorA: { value: new Color(\"#D92E2E\") },\n      u_colorB: { value: new Color(\"#2EBAD9\") },\n    }), []\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"mousemove\", updateMousePosition, false);\n  \n    return () => {\n      window.removeEventListener(\"mousemove\", updateMousePosition, false);\n    };\n  }, [updateMousePosition]);\n\n  useFrame((state) => {\n    const { clock } = state;\n    mesh.current.material.uniforms.u_time.value = clock.getElapsedTime();\n    mesh.current.material.uniforms.u_mouse.value = new Vector2(\n      mousePosition.current.x,\n      mousePosition.current.y\n    );\n  });\n\n  return (\n    <mesh ref={mesh} position={[0, 0, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={1.5}>\n      <planeGeometry args={[1, 1, 32, 32]} />\n      <shaderMaterial vertexColors={true} \n        fragmentShader={fragmentShader}\n        vertexShader={vertexShader}\n        uniforms={uniforms}\n      />\n    </mesh>\n  );\n};\n\nconst Background = () => {\n  return (\n    <Canvas camera={{ position: [0.0, 0.0, 1.5] }}>\n      <Fragment />\n      <OrbitControls />\n    </Canvas>\n  );\n};\n\n\nexport default Background"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}