{"ast":null,"code":"import _objectWithoutProperties from \"/Users/angelarucci/Desktop/Projects/Personal-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport { Box3, Vector3, Sphere } from 'three';\nimport * as React from 'react';\nvar Center = /*#__PURE__*/React.forwardRef(function Center(_ref, fRef) {\n  var children = _ref.children,\n    disable = _ref.disable,\n    disableX = _ref.disableX,\n    disableY = _ref.disableY,\n    disableZ = _ref.disableZ,\n    left = _ref.left,\n    right = _ref.right,\n    top = _ref.top,\n    bottom = _ref.bottom,\n    front = _ref.front,\n    back = _ref.back,\n    onCentered = _ref.onCentered,\n    _ref$precise = _ref.precise,\n    precise = _ref$precise === void 0 ? true : _ref$precise,\n    _ref$cacheKey = _ref.cacheKey,\n    cacheKey = _ref$cacheKey === void 0 ? 0 : _ref$cacheKey,\n    props = _objectWithoutProperties(_ref, [\"children\", \"disable\", \"disableX\", \"disableY\", \"disableZ\", \"left\", \"right\", \"top\", \"bottom\", \"front\", \"back\", \"onCentered\", \"precise\", \"cacheKey\"]);\n  var ref = React.useRef(null);\n  var outer = React.useRef(null);\n  var inner = React.useRef(null);\n  React.useLayoutEffect(function () {\n    outer.current.matrixWorld.identity();\n    var box3 = new Box3().setFromObject(inner.current, precise);\n    var center = new Vector3();\n    var sphere = new Sphere();\n    var width = box3.max.x - box3.min.x;\n    var height = box3.max.y - box3.min.y;\n    var depth = box3.max.z - box3.min.z;\n    box3.getCenter(center);\n    box3.getBoundingSphere(sphere);\n    var vAlign = top ? height / 2 : bottom ? -height / 2 : 0;\n    var hAlign = left ? -width / 2 : right ? width / 2 : 0;\n    var dAlign = front ? depth / 2 : back ? -depth / 2 : 0;\n    outer.current.position.set(disable || disableX ? 0 : -center.x + hAlign, disable || disableY ? 0 : -center.y + vAlign, disable || disableZ ? 0 : -center.z + dAlign); // Only fire onCentered if the bounding box has changed\n\n    if (typeof onCentered !== 'undefined') {\n      onCentered({\n        parent: ref.current.parent,\n        container: ref.current,\n        width: width,\n        height: height,\n        depth: depth,\n        boundingBox: box3,\n        boundingSphere: sphere,\n        center: center,\n        verticalAlignment: vAlign,\n        horizontalAlignment: hAlign,\n        depthAlignment: dAlign\n      });\n    }\n  }, [cacheKey, onCentered, top, left, front, disable, disableX, disableY, disableZ, precise, right, bottom, back]);\n  React.useImperativeHandle(fRef, function () {\n    return ref.current;\n  }, []);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props), /*#__PURE__*/React.createElement(\"group\", {\n    ref: outer\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: inner\n  }, children)));\n});\nexport { Center };","map":null,"metadata":{},"sourceType":"module"}