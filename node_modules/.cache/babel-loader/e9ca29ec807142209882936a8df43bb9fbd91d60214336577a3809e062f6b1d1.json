{"ast":null,"code":"const fragmentShader = `\n// varying vec2 vUv;\n// varying vec3 vColor;\n\n// uniform vec3 u_a_color;\n// uniform vec3 u_b_color;\n// uniform vec3 u_c_color;\n\nuniform vec3 u_colorA;\nuniform vec3 u_colorB;\nvarying float vZ;\n\n\n\nvoid main() {\n  // vec3 colorA = vec3(0.912,0.191,0.652);\n  // vec3 colorB = vec3(1.000,0.777,0.052);\n\n\n  // // \"Normalizing\" with an arbitrary value\n  // // We'll see a cleaner technique later :)   \n  // vec2 normalizedPixel = gl_FragCoord.xy/600.0;\n  // vec3 color = mix(u_a_color, u_b_color, vec3(vUv.y));\n\n  // gl_FragColor = vec4(vColor,1.0);\n  // gl_FragColor = vec4(color, 1.);\n\n  // gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n\n  vec3 color = mix(u_colorA, u_colorB, vZ * 2.0 + 0.5); \n  gl_FragColor = vec4(color, 1.0);\n\n  vec3 color = mix(u_colorA, u_colorB, vZ * 2.0 + 0.5); \n  gl_FragColor = vec4(color, 1.0);\n}\n\n`;\nexport default fragmentShader;","map":{"version":3,"names":["fragmentShader"],"sources":["/Users/angelarucci/Desktop/Projects/Personal-Site/src/Shader/FragmentShader.js"],"sourcesContent":["const fragmentShader = `\n// varying vec2 vUv;\n// varying vec3 vColor;\n\n// uniform vec3 u_a_color;\n// uniform vec3 u_b_color;\n// uniform vec3 u_c_color;\n\nuniform vec3 u_colorA;\nuniform vec3 u_colorB;\nvarying float vZ;\n\n\n\nvoid main() {\n  // vec3 colorA = vec3(0.912,0.191,0.652);\n  // vec3 colorB = vec3(1.000,0.777,0.052);\n\n\n  // // \"Normalizing\" with an arbitrary value\n  // // We'll see a cleaner technique later :)   \n  // vec2 normalizedPixel = gl_FragCoord.xy/600.0;\n  // vec3 color = mix(u_a_color, u_b_color, vec3(vUv.y));\n\n  // gl_FragColor = vec4(vColor,1.0);\n  // gl_FragColor = vec4(color, 1.);\n\n  // gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);\n\n  vec3 color = mix(u_colorA, u_colorB, vZ * 2.0 + 0.5); \n  gl_FragColor = vec4(color, 1.0);\n\n  vec3 color = mix(u_colorA, u_colorB, vZ * 2.0 + 0.5); \n  gl_FragColor = vec4(color, 1.0);\n}\n\n`\n\nexport default fragmentShader\n"],"mappings":"AAAA,MAAMA,cAAc,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,eAAeA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}