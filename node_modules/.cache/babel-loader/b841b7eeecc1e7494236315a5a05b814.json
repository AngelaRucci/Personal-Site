{"ast":null,"code":"import _classCallCheck from \"/Users/angelarucci/Desktop/Projects/Personal-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/angelarucci/Desktop/Projects/Personal-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/angelarucci/Desktop/Projects/Personal-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/angelarucci/Desktop/Projects/Personal-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/angelarucci/Desktop/Projects/Personal-Site/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { UniformsUtils, ShaderMaterial } from \"three\";\nimport { Pass, FullScreenQuad } from \"./Pass.js\";\nimport { CopyShader } from \"../shaders/CopyShader.js\";\nvar TexturePass = /*#__PURE__*/function (_Pass) {\n  _inherits(TexturePass, _Pass);\n  function TexturePass(map, opacity) {\n    var _this;\n    _classCallCheck(this, TexturePass);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TexturePass).call(this));\n    var shader = CopyShader;\n    _this.map = map;\n    _this.opacity = opacity !== void 0 ? opacity : 1;\n    _this.uniforms = UniformsUtils.clone(shader.uniforms);\n    _this.material = new ShaderMaterial({\n      uniforms: _this.uniforms,\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader,\n      depthTest: false,\n      depthWrite: false\n    });\n    _this.needsSwap = false;\n    _this.fsQuad = new FullScreenQuad(null);\n    return _this;\n  }\n  _createClass(TexturePass, [{\n    key: \"render\",\n    value: function render(renderer, writeBuffer, readBuffer) {\n      var oldAutoClear = renderer.autoClear;\n      renderer.autoClear = false;\n      this.fsQuad.material = this.material;\n      this.uniforms[\"opacity\"].value = this.opacity;\n      this.uniforms[\"tDiffuse\"].value = this.map;\n      this.material.transparent = this.opacity < 1;\n      renderer.setRenderTarget(this.renderToScreen ? null : readBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n      renderer.autoClear = oldAutoClear;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.material.dispose();\n      this.fsQuad.dispose();\n    }\n  }]);\n  return TexturePass;\n}(Pass);\nexport { TexturePass };","map":null,"metadata":{},"sourceType":"module"}