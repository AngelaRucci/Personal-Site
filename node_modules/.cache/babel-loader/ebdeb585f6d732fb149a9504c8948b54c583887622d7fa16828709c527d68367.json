{"ast":null,"code":"var _jsxFileName = \"/Users/angelarucci/Desktop/Projects/Personal-Site/src/Shader/ShaderObject.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { OrbitControls } from \"@react-three/drei\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { useMemo, useRef } from \"react\";\nimport { Color, Vector2 } from \"three\";\nimport vertexShader from './VertexShader';\nimport fragmentShader from './FragmentShader';\n\n// colors it\n// const fragmentShader = `...`;\n// makes it move\n// const vertexShader = `...`;\n\n// console.log([\"red\", \"pink\", \"blue\"].map(c => new Color(c)));\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovingPlane = () => {\n  _s();\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n  const uniforms = useMemo(() => ({\n    u_time: {\n      value: 0.0\n    }\n  }), []);\n  useFrame(state => {\n    const {\n      clock\n    } = state;\n    mesh.current.material.uniforms.u_time.value = clock.getElapsedTime();\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: mesh,\n    position: [0, 0, 0],\n    rotation: [-Math.PI / 2, 0, 0],\n    scale: 1.5,\n    children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n      args: [1, 1, 32, 32]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"shaderMaterial\", {\n      fragmentShader: fragmentShader,\n      vertexShader: vertexShader,\n      uniforms: uniforms,\n      wireframe: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(MovingPlane, \"dsGwMnvRu6iKUbHdP9YwtSu1ANc=\", false, function () {\n  return [useFrame];\n});\n_c = MovingPlane;\nconst Fragment = () => {\n  _s2();\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n\n  // const mousePosition = useRef({ x: 0, y: 0 });\n\n  // const updateMousePosition = useCallback((e) => {\n  //   mousePosition.current = { x: e.pageX, y: e.pageY };\n  // }, []);\n\n  const uniforms = useMemo(() => ({\n    u_time: {\n      value: 0.0\n    },\n    u_mouse: {\n      value: new Vector2(0, 0)\n    },\n    u_bg: {\n      value: new Color(\"#D9C82E\")\n    },\n    u_colorA: {\n      value: new Color(\"#D92E2E\")\n    },\n    u_colorB: {\n      value: new Color(\"#2EBAD9\")\n    }\n  }), []);\n  useFrame(state => {\n    const {\n      clock\n    } = state;\n    mesh.current.material.uniforms.u_time.value = clock.getElapsedTime();\n  });\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    ref: mesh,\n    position: [0, 0, 0],\n    rotation: [-Math.PI / 2, 0, 0],\n    scale: 1.5,\n    children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n      args: [1, 1, 32, 32]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"shaderMaterial\", {\n      vertexColors: true,\n      fragmentShader: fragmentShader,\n      vertexShader: vertexShader,\n      uniforms: uniforms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s2(Fragment, \"dsGwMnvRu6iKUbHdP9YwtSu1ANc=\", false, function () {\n  return [useFrame];\n});\n_c2 = Fragment;\nconst Background = () => {\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    camera: {\n      position: [0.0, 0.0, 1.0]\n    },\n    children: [/*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Background;\nexport default Background;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MovingPlane\");\n$RefreshReg$(_c2, \"Fragment\");\n$RefreshReg$(_c3, \"Background\");","map":{"version":3,"names":["OrbitControls","Canvas","useFrame","useMemo","useRef","Color","Vector2","vertexShader","fragmentShader","jsxDEV","_jsxDEV","MovingPlane","_s","mesh","uniforms","u_time","value","state","clock","current","material","getElapsedTime","ref","position","rotation","Math","PI","scale","children","args","fileName","_jsxFileName","lineNumber","columnNumber","wireframe","_c","Fragment","_s2","u_mouse","u_bg","u_colorA","u_colorB","vertexColors","_c2","Background","camera","_c3","$RefreshReg$"],"sources":["/Users/angelarucci/Desktop/Projects/Personal-Site/src/Shader/ShaderObject.jsx"],"sourcesContent":["import { OrbitControls } from \"@react-three/drei\";\nimport { Canvas, useFrame } from \"@react-three/fiber\";\nimport { useMemo, useRef } from \"react\";\nimport { Color, Vector2 } from \"three\";\n\nimport vertexShader from './VertexShader';\nimport fragmentShader from './FragmentShader';\n\n// colors it\n// const fragmentShader = `...`;\n// makes it move\n// const vertexShader = `...`;\n\n// console.log([\"red\", \"pink\", \"blue\"].map(c => new Color(c)));\n\nconst MovingPlane = () => {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n\n  const uniforms = useMemo(\n    () => ({\n      u_time: {\n        value: 0.0,\n      },\n    }), []\n  );\n\n  useFrame((state) => {\n    const { clock } = state;\n    mesh.current.material.uniforms.u_time.value = clock.getElapsedTime();\n  });\n\n  return (\n    <mesh ref={mesh} position={[0, 0, 0]}  rotation={[-Math.PI / 2, 0, 0]} scale={1.5}>\n      <planeGeometry args={[1, 1, 32, 32]} />\n      <shaderMaterial\n        fragmentShader={fragmentShader}\n        vertexShader={vertexShader}\n        uniforms={uniforms}\n        wireframe\n      />\n    </mesh>\n  );\n};\n\n\nconst Fragment = () => {\n  // This reference will give us direct access to the mesh\n  const mesh = useRef();\n\n  // const mousePosition = useRef({ x: 0, y: 0 });\n\n  // const updateMousePosition = useCallback((e) => {\n  //   mousePosition.current = { x: e.pageX, y: e.pageY };\n  // }, []);\n\n  const uniforms = useMemo(\n    () => ({\n      u_time: {\n        value: 0.0,\n      },\n      u_mouse: { value: new Vector2(0, 0) },\n      u_bg: {\n        value: new Color(\"#D9C82E\"),\n      },\n      u_colorA: { value: new Color(\"#D92E2E\") },\n      u_colorB: { value: new Color(\"#2EBAD9\") },\n    }), []\n  );\n\n  useFrame((state) => {\n    const { clock } = state;\n    mesh.current.material.uniforms.u_time.value = clock.getElapsedTime();\n  });\n\n  return (\n    <mesh ref={mesh} position={[0, 0, 0]} rotation={[-Math.PI / 2, 0, 0]} scale={1.5}>\n      <planeGeometry args={[1, 1, 32, 32]} />\n      <shaderMaterial vertexColors={true} \n        fragmentShader={fragmentShader}\n        vertexShader={vertexShader}\n        uniforms={uniforms}\n      />\n    </mesh>\n  );\n};\n\nconst Background = () => {\n  return (\n    <Canvas camera={{ position: [0.0, 0.0, 1.0] }}>\n      <Fragment />\n      <OrbitControls />\n    </Canvas>\n  );\n};\n\n\nexport default Background"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}